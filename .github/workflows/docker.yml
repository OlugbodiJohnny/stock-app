name: Build and Deploy to AWS Docker Container (Single)

on:
  push:
    branches: [ docker ]
  pull_request:
    types: [closed]
    branches: [docker]

jobs:
  build:
    runs-on: ubuntu-latest
    concurrency:
      group: stock-app-workflow-group
#    if: github.event.pull_request.merged == true
    steps:
    - name: Call Maven Workflow
      uses: benc-uk/workflow-dispatch@v1
      with:
        workflow: maven.yml
        ref: ${{ github.event.pull_request.head.ref }}
        token: ${{ secrets.WORKFLOW_TOKEN }}

#    - name: Wait for Maven Workflow to Complete
#      uses: styfle/wait-for-remote-action@v1
#      with:
#        repo: OlugbodiJohnny/stock-app
#        ref: ${{ github.event.after }}
#        workflow: maven.yml
#        token: ${{ secrets.ACCESS_TOKEN }}

    - name: Check out code
      uses: actions/checkout@v2

#      - name: Log in to Docker registry
#        uses: docker/login-action@v1
#        with:
#          registry: ${{ secrets.DOCKER_REGISTRY }}
#          username: ${{ secrets.DOCKER_USERNAME }}
#          password: ${{ secrets.DOCKER_PASSWORD }}

#      - name: Build and push Docker image
#        uses: docker/build-push-action@v2
#        with:
#          context: .
#          dockerfile: ./Dockerfile
#          push: true
#          tags: ${{ secrets.DOCKER_REGISTRY }}/jkillz234/${{ secrets.AWS_APPLICATION_NAME_DOCKER }}:${{ github.sha }}
#        env:
#          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
#          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}

    - name: Install AWS CLI
      run: |
        sudo apt-get update
        sudo apt-get install awscli -y

    - name: Configure AWS credentials
      run: |
        aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws configure set region ${{ secrets.AWS_REGION }}

    - name: Replace placeholders in Dockerfile
      run: |
        sed -i "s|secrets.SERVER_PORT|$SERVER_PORT|g;
        s|secrets.SPRING_DATASOURCE_URL|$SPRING_DATASOURCE_URL|g;
        s|secrets.SPRING_DATASOURCE_USERNAME|$SPRING_DATASOURCE_USERNAME|g;
        s|secrets.SPRING_DATASOURCE_PASSWORD|$SPRING_DATASOURCE_PASSWORD|g;
        s|secrets.SPRING_JPA_PROPERTIES_HIBERNATE_DIALECT|$SPRING_JPA_PROPERTIES_HIBERNATE_DIALECT|g;
        s|secrets.SPRING_JPA_HIBERNATE_DDL_AUTO|$SPRING_JPA_HIBERNATE_DDL_AUTO|g;
        s|secrets.SPRING_JPA_HIBERNATE_SHOW_SQL|$SPRING_JPA_HIBERNATE_SHOW_SQL|g;
        s|secrets.SPRING_MAIL_PORT|$SPRING_MAIL_PORT|g;
        s|secrets.SPRING_MAIL_SMTP_AUTH|$SPRING_MAIL_SMTP_AUTH|g;
        s|secrets.SPRING_MAIL_SMTP_STARTTLS|$SPRING_MAIL_SMTP_STARTTLS|g;
        s|secrets.SPRING_MAIL_SMTP_SLL_ENABLE|$SPRING_MAIL_SMTP_SLL_ENABLE|g;
        s|secrets.TOKEN_EXPIRATION|$TOKEN_EXPIRATION|g;
        s|secrets.SECRET_KEY|$SECRET_KEY|g;
        s|secrets.POLYGON_API_KEY|$POLYGON_API_KEY|g;
        s|secrets.POLYGON_BASE_URL|$POLYGON_BASE_URL|g;
        s|secrets.DEV_EMAIL|$DEV_EMAIL|g;
        s|secrets.DEV_PASSWORD|$DEV_PASSWORD|g;
        s|secrets.SWAGGER_URL|$SWAGGER_URL|g" Dockerfile
      env:
        SERVER_PORT: ${{ secrets.SERVER_PORT }}
        SPRING_DATASOURCE_URL: ${{ secrets.SPRING_DATASOURCE_URL }}
        SPRING_DATASOURCE_USERNAME: ${{ secrets.SPRING_DATASOURCE_USERNAME }}
        SPRING_DATASOURCE_PASSWORD: ${{ secrets.SPRING_DATASOURCE_PASSWORD }}
        SPRING_JPA_PROPERTIES_HIBERNATE_DIALECT: ${{ secrets.SPRING_JPA_PROPERTIES_HIBERNATE_DIALECT }}
        SPRING_JPA_HIBERNATE_DDL_AUTO: ${{ secrets.SPRING_JPA_HIBERNATE_DDL_AUTO }}
        SPRING_JPA_HIBERNATE_SHOW_SQL: ${{ secrets.SPRING_JPA_HIBERNATE_SHOW_SQL }}
        SPRING_ADMIN_EMAIL: ${{ secrets.SPRING_ADMIN_EMAIL }}
        SPRING_ADMIN_PASSWORD: ${{ secrets.SPRING_ADMIN_PASSWORD }}
        SPRING_MAIL_HOST: ${{ secrets.SPRING_MAIL_HOST }}
        SPRING_MAIL_PORT: ${{ secrets.SPRING_MAIL_PORT }}
        SPRING_MAIL_USERNAME: ${{ secrets.SPRING_MAIL_USERNAME }}
        SPRING_MAIL_PASSWORD: ${{ secrets.SPRING_MAIL_PASSWORD }}
        SPRING_MAIL_SMTP_AUTH: ${{ secrets.SPRING_MAIL_SMTP_AUTH }}
        SPRING_MAIL_SMTP_STARTTLS: ${{ secrets.SPRING_MAIL_SMTP_STARTTLS }}
        SPRING_MAIL_SMTP_SLL_ENABLE: ${{ secrets.SPRING_MAIL_SMTP_SLL_ENABLE }}
        TOKEN_EXPIRATION: ${{ secrets.TOKEN_EXPIRATION }}
        SECRET_KEY: ${{ secrets.SECRET_KEY }}
        POLYGON_API_KEY: ${{ secrets.POLYGON_API_KEY }}
        POLYGON_BASE_URL: ${{ secrets.POLYGON_BASE_URL }}
        DEV_EMAIL: ${{ secrets.DEV_EMAIL }}
        DEV_PASSWORD: ${{ secrets.DEV_PASSWORD }}
        SWAGGER_URL: ${{ secrets.SWAGGER_URL }}

    - name: Create and upload source bundle to S3
      run: |
        zip -r app.zip . -x "*.git*" -x "*.github*" -x "*README.md*" -x "*.gitignore*"
        aws s3 cp app.zip s3://${{ secrets.S3_BUCKET }}/${{ secrets.AWS_APPLICATION_NAME_DOCKER }}/${{ github.sha }}.zip --region ${{ secrets.AWS_REGION }}

    - name: Update Elastic Beanstalk environment
      run: |
        aws elasticbeanstalk create-application-version --application-name ${{ secrets.AWS_APPLICATION_NAME_DOCKER }} --version-label ${{ github.sha }} --source-bundle S3Bucket=${{ secrets.S3_BUCKET }},S3Key=${{ secrets.AWS_APPLICATION_NAME_DOCKER }}/${{ github.sha }}.zip
        aws elasticbeanstalk update-environment --environment-name ${{ secrets.AWS_ENVIRONMENT_NAME_DOCKER }} --version-label ${{ github.sha }}
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_REGION: ${{ secrets.AWS_REGION }}